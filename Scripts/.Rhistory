LikRatioSim <- function( mod ) {
y.sim <- simulate(mod, nsim = 1)  # one set of simulated data
model.lower <- lmer(y.sim$sim_1 ~ 1 + (1|Study), data=responseA )
model.full  <- lmer(y.sim$sim_1 ~ 1 + Trait.type + NatExp + (1|Study), data=responseA )
LRSim <-  -as.numeric(deviance(model.full) - deviance(model.lower))
return(LRSim)
rm(y.sim, model.lower, model.full, LRSim)
}
LikRatParBoot <- replicate(n = 1000, LikRatioSim( DZ.reml0 ))
LR.model <- -as.numeric(deviance( DZ.reml1 ) - deviance( DZ.reml0 ))
mean(c((LikRatParBoot > LR.model), 1))
LikRatioSim <- function( mod ) {
y.sim <- simulate(mod, nsim = 1)  # one set of simulated data
model.lower <- lmer(y.sim$sim_1 ~ 1 + Trait.type + NatExp + (1|Study), data=responseA )
model.full  <- lmer(y.sim$sim_1 ~ 1 + Trait.type + NatExp + (Trait.type|Species) + (1|Study), data=responseA )
LRSim <-  -as.numeric(deviance(model.full) - deviance(model.lower))
return(LRSim)
rm(y.sim, model.lower, model.full, LRSim)
}
LikRatParBoot <- replicate(n = 1000, LikRatioSim( DZ.reml1 ))
LR.model <- -as.numeric(deviance( DZ.reml3 ) - deviance( DZ.reml1 ))
mean(c((LikRatParBoot > LR.model), 1))
myprior1 <- list( list(V=1, nu=0.002), list( G1=list(V=1, nu=0.002)) )
myprior2 <- list( list(V=1, nu=0.002), list( G1=list(V=1, nu=0.002), G2=list(V=1, nu=0.002) ) )
myprior3 <- list( list(V=1, nu=0.002), list( G1=list(V=1, nu=0.002), G2=list(V=1, nu=0.002), G3=list(V=1, nu=0.002) ) )
DZ.Bayes0 <- MCMCglmm( absRate ~ 1, random=~Study+Species, nitt=10000, burnin=5000, thin=10 , data=responseA, verbose=F, family="gaussian")
summary( DZ.Bayes0 )$solutions
resp <- FoldedNormal( DZ.Bayes0$Sol )
mean( resp )   ;   hpd( resp )   ;   Mode( resp )
DZ.Bayes1 <- MCMCglmm( absRate ~ 1 + Trait.type + NatExp, random=~ Study, nitt=50000, burnin=1000, thin=15 , data=responseA, verbose=F, family="gaussian", prior=myprior1 )
DZ.Bayes2 <- MCMCglmm( absRate ~ 1 + Trait.type + NatExp, random=~ Species+Study, nitt=50000, burnin=10000, thin=15 , data=responseA, verbose=F, family="gaussian", prior=myprior2 )
DZ.Bayes3 <- MCMCglmm( absRate ~ 1 + Trait.type + NatExp, random=~ idh(Trait.type):Species + Study, nitt=50000, burnin=10000, thin=25 , data=responseA, verbose=F, family="gaussian", prior=myprior2 )
summary(DZ.Bayes3)$solutions
estimates <- FoldedNormal( cbind( weightedintercept,
( weightedintercept + DZ.Bayes3$Sol[,2] ),
( weightedintercept + DZ.Bayes3$Sol[,3] ) ))
colnames( estimates ) <- c( 'A.LH', 'A.M', 'A.S' )
# tabulate estimates
apply( estimates, 2, mean )  ;	apply( estimates, 2, hpd )
length(responseA$Rate[ responseA$NatExp=="E" ])
length(responseA$Rate[ responseA$NatExp=="N" ])
dim(responseA)
dim(responseA)[1]
weightedintercept <- ((DZ.Bayes3$Sol[,1] * length(responseA$Rate[ responseA$NatExp=="E" ]) ) / dim(responseA)[1]) +
((DZ.Bayes3$Sol[,1] + DZ.Bayes3$Sol[,4]) * length(responseA$Rate[ responseA$NatExp=="N" ]) ) / dim(responseA)[1]
estimates <- FoldedNormal( cbind( weightedintercept,
( weightedintercept + DZ.Bayes3$Sol[,2] ),
( weightedintercept + DZ.Bayes3$Sol[,3] ) ))
colnames( estimates ) <- c( 'A.LH', 'A.M', 'A.S' )
apply( estimates, 2, mean )  ;	apply( estimates, 2, hpd )
Rfixed <- FoldedNormal( DZ.Bayes3$Sol )
plot(Rfixed[1:3,1], type="n", xaxt="n", ylab="Rate of evolution (haldanes)", xlab="Trait type", xlim=c(0.7,3.3), ylim=c(-0.05,0.45), main="Rate of Evolution")
axis(side=1, c("LH","M","S"), at=c(1,2,3))
lines( c(1,1), c(hpd(estimates[,1])), lwd=2 )
lines( c(2,2), c(hpd(estimates[,2])), lwd=2 )
lines( c(3,3), c(hpd(estimates[,3])), lwd=2 )
A.est <- c( mean( estimates[,1] ), mean( estimates[,2] ), mean( estimates[,3] ) )
points( 1:3, A.est, pch=16, cex=2)  #animals - filled points
DZ.reml.P.1 <- lmer( absRate ~ 1 + (1|Species), data=responseP )
DZ.reml.P.1 <- lmer( absRate ~ 1 + Trait.type + (1|Species), data=responseP )
DZ.reml.P.2 <- lmer( absRate ~ 1 + Trait.type + Study + (1|Species), data=responseP )
bbmle::BICtab( DZ.reml.P.0, DZ.reml.P.1, DZ.reml.P.2, nobs=nrow(responseP), weights=T )
DZ.reml.P.0 <- lmer( absRate ~ 1 + (1|Species), data=responseP )
DZ.reml.P.1 <- lmer( absRate ~ 1 + Trait.type + (1|Species), data=responseP )
DZ.reml.P.2 <- lmer( absRate ~ 1 + Trait.type + Study + (1|Species), data=responseP )
bbmle::BICtab( DZ.reml.P.0, DZ.reml.P.1, DZ.reml.P.2, nobs=nrow(responseP), weights=T )
bbmle::AICctab( DZ.reml.P.0, DZ.reml.P.1, DZ.reml.P.2, nobs=nrow(responseP), weights=T )
# model 0 vs model 1
LikRatioSim <- function( mod ) {
y.sim <- simulate(mod, nsim = 1)  # one set of simulated data
model.lower <- lmer(y.sim$sim_1 ~ 1 + (1|Species), data=responseP )
model.full  <- lmer(y.sim$sim_1 ~ 1 + Trait.type + (1|Species), data=responseP )
LRSim <-  -as.numeric(deviance(model.full) - deviance(model.lower))
return(LRSim)
rm(y.sim, model.lower, model.full, LRSim)
}
LikRatParBoot <- replicate(n = 1000, LikRatioSim( DZ.reml.P.0 ))
LR.model <- -as.numeric(deviance( DZ.reml.P.1 ) - deviance( DZ.reml.P.0 ))
mean(c((LikRatParBoot > LR.model), 1))
# model 1 vs model 2
LikRatioSim <- function( mod ) {
y.sim <- simulate(mod, nsim = 1)  # one set of simulated data
model.lower <- lmer(y.sim$sim_1 ~ 1 + Trait.type + (1|Species), data=responseP )
model.full  <- lmer(y.sim$sim_1 ~ 1 + Trait.type + Study + (1|Species), data=responseP )
LRSim <-  -as.numeric(deviance(model.full) - deviance(model.lower))
return(LRSim)
rm(y.sim, model.lower, model.full, LRSim)
}
LikRatParBoot <- replicate(n = 1000, LikRatioSim( DZ.reml.P.1 ))
LR.model <- -as.numeric(deviance( DZ.reml.P.2 ) - deviance( DZ.reml.P.1 ))
mean(c((LikRatParBoot > LR.model), 1))
# 0.1948052
DZ.Bayes.P.0 <- MCMCglmm( absRate ~ 1, random=~Species, nitt=200000, burnin=1000, thin=20 , data=responseP, verbose=F, family="gaussian")
DZ.Bayes.P.1 <- MCMCglmm( absRate ~ 1 + Trait.type, random=~Species, nitt=200000, burnin=1000, thin=20 , data=responseP, verbose=F, family="gaussian")
DZ.Bayes.P.2 <- MCMCglmm( absRate ~ 1 + Trait.type + Species, random=~Species, nitt=200000, burnin=1000, thin=20 , data=responseP, verbose=F, family="gaussian")
# DIC seems agnostic, but LR & BIC both point to model1
DZ.Bayes.P.1$DIC	;	DZ.Bayes.P.2$DIC
DZ.Bayes.P.0$DIC  ;   DZ.Bayes.P.1$DIC	;	DZ.Bayes.P.2$DIC
summary( DZ.Bayes.P.1 )$solutions
plant.estimates <- FoldedNormal( cbind( DZ.Bayes.P.1$Sol[,1], DZ.Bayes.P.1$Sol[,1] + DZ.Bayes.P.1$Sol[,2] ))
apply( plant.estimates, 2, mean )	;	apply( plant.estimates, 2, hpd )
respP <- FoldedNormal( DZ.Bayes.P.0 )
respP <- FoldedNormal( DZ.Bayes.P.0$Sol )
mean( respP )     ;   hpd( respP )    ;   median( respP )
plot(Rfixed[1:3,1], type="n", xaxt="n", ylab="Rate of evolution (haldanes)", xlab="Trait type", xlim=c(0.7,3.3),
ylim=c(-0.05,0.45), main="Rate of Evolution")
axis(side=1, c("LH","M","S"), at=c(1,2,3))
lines( c(1,1), c(hpd(estimates[,1])), lwd=2 )
lines( c(2,2), c(hpd(estimates[,2])), lwd=2 )
lines( c(3,3), c(hpd(estimates[,3])), lwd=2 )
lines( c(1.1,1.1), c(hpd(plant.estimates[,1])), lwd=2 )
lines( c(2.1,2.1), c(hpd(plant.estimates[,2])), lwd=2 )
points( 1:3, A.est, pch=16, cex=2)  #animals - filled points
P.est <- c( mean( plant.estimates[,1] ), mean( plant.estimates[,2] ) )
points( 1.1:2.1, P.est, pch=21, bg="white", cex=2)  # plants - empty points
select <- read.csv("combined_selection.csv", na.strings="NA")
str(select)
names(select)
summary(select)
levels( select$Species )
select$Taxon2 <- factor( sub( "V", "A", sub( "I", "A", select$Taxon )))
names( select )
pairs( select[, c(5,7,8,10,11)] )
plot( select$GamPos )	;	# identify( select$GamPos )	# check 459 466
DZ.reml0 <- lmer( absRate ~ 1 + (1|Study), data=responseA )
DZ.reml1 <- lmer( absRate ~ 1 + Trait.type + NatExp + (1|Study), data=responseA )
DZ.reml2 <- lmer( absRate ~ 1 + Trait.type + NatExp + (1|Study) + (1|Species), data=responseA )
DZ.reml3 <- lmer( absRate ~ 1 + Trait.type + NatExp + (Trait.type|Species) + (1|Study), data=responseA )
bbmle::BICtab( DZ.reml0, DZ.reml1, DZ.reml2, DZ.reml3, nobs=nrow(responseA), weights=T )
DZ.reml.P.0 <- lmer( absRate ~ 1 + (1|Species), data=responseP )
DZ.reml.P.1 <- lmer( absRate ~ 1 + Trait.type + (1|Species), data=responseP )
DZ.reml.P.2 <- lmer( absRate ~ 1 + Trait.type + Study + (1|Species), data=responseP )
bbmle::BICtab( DZ.reml.P.0, DZ.reml.P.1, DZ.reml.P.2, nobs=nrow(responseP), weights=T )
plot(Rfixed[1:3,1], type="n", xaxt="n", ylab="Rate of evolution (haldanes)", xlab="Trait type", xlim=c(0.7,3.3),
ylim=c(-0.05,0.45), main="Rate of Evolution")
axis(side=1, c("LH","M","S"), at=c(1,2,3))
lines( c(1,1), c(hpd(estimates[,1])), lwd=2 )
lines( c(2,2), c(hpd(estimates[,2])), lwd=2 )
lines( c(3,3), c(hpd(estimates[,3])), lwd=2 )
lines( c(1.1,1.1), c(hpd(plant.estimates[,1])), lwd=2 )
lines( c(2.1,2.1), c(hpd(plant.estimates[,2])), lwd=2 )
points( 1:3, A.est, pch=16, cex=2)  #animals - filled points
P.est <- c( mean( plant.estimates[,1] ), mean( plant.estimates[,2] ) )
points( 1.1:2.1, P.est, pch=21, bg="white", cex=2)  # plants - empty points
select <- read.csv("combined_selection_data.csv", na.strings="NA")
str(select)
names(select)
summary(select)
levels( select$Species )
select$Taxon2 <- factor( sub( "V", "A", sub( "I", "A", select$Taxon )))
select[ c(459, 466),]
names( select )
names( select )
pairs( select[, c(5,7,8,10,11)] )
plot( select$GamPos )	;	# identify( select$GamPos )	# check 459 466
select <- select[ -c(459, 466),]
ddply( select, .(Taxon2, Trait.type), summarise, n_abs_Beta= sum(!is.na(abs_Beta)), n_GamPos= sum(!is.na(GamPos)), n_GamNeg= sum(!is.na(GamNeg)) )
ddply( select, .(Taxon2, Trait.type), summarise, m_abs_Beta= mean(!is.na(abs_Beta)), m_GamPos= mean(!is.na(GamPos)), m_GamNeg= mean(!is.na(GamNeg)) )
ddply( select, .(Taxon2, Trait.type), summarise, gm_abs_Beta= g_mean((abs_Beta)), gm_GamPos= g_mean((GamPos)), gm_GamNeg= g_mean(abs(GamNeg)) )
print( "counts of gradients" )
ddply( select, .(Taxon2, Trait.type), summarise, n_abs_Beta= sum(!is.na(abs_Beta)), n_GamPos= sum(!is.na(GamPos)), n_GamNeg= sum(!is.na(GamNeg)) )
print( "means of gradients" )
ddply( select, .(Taxon2, Trait.type), summarise, m_abs_Beta= mean(!is.na(abs_Beta)), m_GamPos= mean(!is.na(GamPos)), m_GamNeg= mean(!is.na(GamNeg)) )
print( "geometric means of gradients" )
ddply( select, .(Taxon2, Trait.type), summarise, gm_abs_Beta= g_mean((abs_Beta)), gm_GamPos= g_mean((GamPos)), gm_GamNeg= g_mean(abs(GamNeg)) )
print( "medians of gradients" )
ddply( select, .(Taxon2, Trait.type), summarise, me_abs_Beta= median(na.omit(abs_Beta)), me_GamPos= median(na.omit(GamPos)), me_GamNeg= median(na.omit(GamNeg)) )
with( select_B, by( abs_Beta, list(Taxon2, Trait.type), mean, na.rm=T ) )
prior = list(R = list(V =0, n = 0.002), G = list(G1  = list(V =0, n = 0.002), G2 = list(V =0, n = 0.002)))
select_B <- subset( select, select$Beta_SE > 0 )
measurement_error_variance =  select_B$Beta_SE^2
with( select_B, by( abs_Beta, list(Taxon2, Trait.type), mean, na.rm=T ) )
ddply( select_B, .(Taxon2, Trait.type), summarise, n_abs_Beta= sum(!is.na(abs_Beta)), n_GamPos= sum(!is.na(GamPos)), n_GamNeg= sum(!is.na(GamNeg)) )
dim( select_B )
Beta_reml <- lmer( Beta ~ 1 + Trait.type * Taxon2 + (1|StudyID) + (1|Species), data=select_B, weights=measurement_error_variance )
summary( Beta_remal )
summary( Beta_reml )
Beta_Bayes <- MCMCglmm( Beta ~ 1 + Trait.type * Taxon2, mev= measurement_error_variance, data= select_B, random= ~ StudyID + Species, prior= myprior, nitt=5000, burnin=100, thin=25 )
myprior <- list(R = list(V=1, nu=0.002), G= list( G1= list (V=1, nu=0.002), G2= list (V=1, nu=0.002)))
# for this analysis we use only those gradients for which standard errors are available.
select_B <- subset( select, select$Beta_SE > 0 )
measurement_error_variance =  select_B$Beta_SE^2
with( select_B, by( abs_Beta, list(Taxon2, Trait.type), mean, na.rm=T ) )
ddply( select_B, .(Taxon2, Trait.type), summarise, n_abs_Beta= sum(!is.na(abs_Beta)), n_GamPos= sum(!is.na(GamPos)), n_GamNeg= sum(!is.na(GamNeg)) )
dim( select_B )
Beta_Bayes <- MCMCglmm( Beta ~ 1 + Trait.type * Taxon2, mev= measurement_error_variance, data= select_B, random= ~ StudyID + Species, prior= myprior, nitt=5000, burnin=100, thin=25 )
summary(Beta_Bayes)$solutions
Bfixed <- summary(Beta_Bayes)$solutions
plot(Bfixed[c(1,3,4),1], type="n", xaxt="n", ylab="Beta values", xlab="Trait type", xlim=c(0.7,3.3), ylim=c(-0.3,0.5), main="Beta")
axis(side=1, c("LH","M","S"), at=c(1,2,3))
estimates <- cbind( Beta_Bayes$Sol[,1],
( Beta_Bayes$Sol[,1] + Beta_Bayes$Sol[,2] ),
( Beta_Bayes$Sol[,1] + Beta_Bayes$Sol[,3] ),
( Beta_Bayes$Sol[,1] + Beta_Bayes$Sol[,4] ),
( Beta_Bayes$Sol[,1] + Beta_Bayes$Sol[,2] + Beta_Bayes$Sol[,4] + Beta_Bayes$Sol[,5] ),
( Beta_Bayes$Sol[,1] + Beta_Bayes$Sol[,3] + Beta_Bayes$Sol[,4] + Beta_Bayes$Sol[,6] ) )
colnames( estimates ) <- c( 'A.LH', 'A.M', 'A.S', 'P.LH', 'P.M', 'P.S' )
lines( c(1,1), c(hpd(estimates[,1])), lwd=2 )
lines( c(2,2), c(hpd(estimates[,2])), lwd=2 )
lines( c(3,3), c(hpd(estimates[,3])), lwd=2 )
lines( c(1.1,1.1), c(hpd(estimates[,4])), lwd=2 )
lines( c(2.1,2.1), c(hpd(estimates[,5])), lwd=2 )
lines( c(3.1,3.1), c(hpd(estimates[,6])), lwd=2 )
A.est <- c( mean(estimates[,1]), mean(estimates[,2]), mean(estimates[,3]) )
points( 1:3, A.est, pch=16, cex=2)  #animals - filled points
P.est <- c( mean(estimates[,4]), mean(estimates[,5]), mean(estimates[,6]) )
points( 1.1:3.1, P.est, pch=21, bg="white", cex=2)
absBeta_Bayes <- MCMCglmm( abs_Beta ~ 1 + Trait.type * Taxon2, mev= measurement_error_variance, data= select_B, random= ~ StudyID + Species,  nitt=500, burnin=10, thin=25 )
summary(absBeta_Bayes)$solutions
estimatesAB <- FoldedNormal( cbind( absBeta_Bayes$Sol[,1],
( absBeta_Bayes$Sol[,1] + absBeta_Bayes$Sol[,2] ),
( absBeta_Bayes$Sol[,1] + absBeta_Bayes$Sol[,3] ),
( absBeta_Bayes$Sol[,1] + absBeta_Bayes$Sol[,4] ),
( absBeta_Bayes$Sol[,1] + absBeta_Bayes$Sol[,2] + absBeta_Bayes$Sol[,4] + absBeta_Bayes$Sol[,5] ),
( absBeta_Bayes$Sol[,1] + absBeta_Bayes$Sol[,3] + absBeta_Bayes$Sol[,4] + absBeta_Bayes$Sol[,6] ) )
colnames( estimatesAB ) <- c( 'A.LH', 'A.M', 'A.S', 'P.LH', 'P.M', 'P.S' )
estimatesAB <- FoldedNormal( cbind( absBeta_Bayes$Sol[,1],
( absBeta_Bayes$Sol[,1] + absBeta_Bayes$Sol[,2] ),
( absBeta_Bayes$Sol[,1] + absBeta_Bayes$Sol[,3] ),
( absBeta_Bayes$Sol[,1] + absBeta_Bayes$Sol[,4] ),
( absBeta_Bayes$Sol[,1] + absBeta_Bayes$Sol[,2] + absBeta_Bayes$Sol[,4] + absBeta_Bayes$Sol[,5] ),
( absBeta_Bayes$Sol[,1] + absBeta_Bayes$Sol[,3] + absBeta_Bayes$Sol[,4] + absBeta_Bayes$Sol[,6] ) ))
colnames( estimatesAB ) <- c( 'A.LH', 'A.M', 'A.S', 'P.LH', 'P.M', 'P.S' )
aBfixed <- summary(absBeta_Bayes)$solutions
plot(aBfixed[c(1,3,5),1], type="n", xaxt="n", ylab="(absolute) Beta values", xlab="Trait type", xlim=c(0.7,3.3), ylim=c(-0.1,0.5), main="Beta (absolute)")
axis(side=1, c("LH","M","S"), at=c(1,2,3))
lines( c(1,1), c(hpd(estimatesAB[,1])), lwd=2 )
lines( c(2,2), c(hpd(estimatesAB[,2])), lwd=2 )
lines( c(3,3), c(hpd(estimatesAB[,3])), lwd=2 )
lines( c(1.1,1.1), c(hpd(estimatesAB[,4])), lwd=2 )
lines( c(2.1,2.1), c(hpd(estimatesAB[,5])), lwd=2 )
lines( c(3.1,3.1), c(hpd(estimatesAB[,6])), lwd=2 )
A.est <- c( mean(estimatesAB[,1]), mean(estimatesAB[,2]), mean(estimatesAB[,3]) )
points( 1:3, A.est, pch=16, cex=2)  #animals - filled points
P.est <- c( mean(estimatesAB[,4]), mean(estimatesAB[,5]), mean(estimatesAB[,6]) )
points( 1.1:3.1, P.est, pch=21, bg="white", cex=2)
select_G <- subset( select, select$Gamma_SE > 0 )
ddply( select_G, .(Taxon2, Trait.type), summarise, n_abs_Beta= sum(!is.na(abs_Beta)), n_GamPos= sum(!is.na(GamPos)), n_GamNeg= sum(!is.na(GamNeg)) )
dim( select_G )
ddply( select_G, .(Taxon2, Trait.type), summarise, m_GamPos= mean(na.omit(GamPos)), med_GamPos= median(na.omit(GamPos)), m_GamNeg= mean(na.omit(GamNeg)), med_GamNeg= median(na.omit(GamNeg)) )
measurement_error_variance <- select_G$Gamma_SE^2
GamPos_1_Bayes <- MCMCglmm( GamPos ~ 1, mev= measurement_error_variance, data= select_G, random= ~ StudyID + Species, prior= myprior, nitt=500 )
summary( GamPos_1_Bayes )$solutions
# post.mean   l-95% CI  u-95% CI eff.samp       pMCMC
# (Intercept) 0.1035137 0.04507204 0.1630329 1932.665 0.001276596
mean( GamPos_1_Bayes$Sol )  ;	hpd( GamPos_1_Bayes$Sol )  ;  Mode( GamPos_1_Bayes$Sol )
GamPos_1_Bayes <- MCMCglmm( GamPos ~ 1, mev= measurement_error_variance, data= select_G, random= ~ StudyID + Species, prior= myprior, nitt=5000 )
summary( GamPos_1_Bayes )$solutions
mean( GamPos_1_Bayes$Sol )  ;	hpd( GamPos_1_Bayes$Sol )  ;  Mode( GamPos_1_Bayes$Sol )
GP1B<- FoldedNormal( GamPos_1_Bayes )
GP1B<- FoldedNormal( GamPos_1_Bayes$Sol )
mean( GP1B )	;	hpd( GP1B )  ;  Mode( GP1B )
GamPos_Bayes <- MCMCglmm( GamPos ~ 1 + Trait.type * Taxon2, mev= measurement_error_variance, data= select_G, random= ~ StudyID + Species, prior= myprior, nitt=5000, burnin=100, thin=25 )
summary(GamPos_Bayes)$solutions
0
GamPos_Bayes <- MCMCglmm( GamPos ~ 1 + Trait.type * Taxon2, mev= measurement_error_variance, data= select_G, random= ~ StudyID + Species, prior= myprior, nitt=50000, burnin=100, thin=25 )
summary(GamPos_Bayes)$solutions
estimates <- FoldedNormal( cbind( GamPos_Bayes$Sol[,1],
( GamPos_Bayes$Sol[,1] + GamPos_Bayes$Sol[,2] ),
( GamPos_Bayes$Sol[,1] + GamPos_Bayes$Sol[,3] ),
( GamPos_Bayes$Sol[,1] + GamPos_Bayes$Sol[,4] ),
( GamPos_Bayes$Sol[,1] + GamPos_Bayes$Sol[,2] + GamPos_Bayes$Sol[,4] + GamPos_Bayes$Sol[,5] ),
( GamPos_Bayes$Sol[,1] + GamPos_Bayes$Sol[,3] + GamPos_Bayes$Sol[,4] + GamPos_Bayes$Sol[,6] ) ))
colnames( estimates ) <- c( 'A.LH', 'A.M', 'A.S', 'P.LH', 'P.M', 'P.S' )
Gpfixed <- apply( estimatesGP, 2, mean )
plot(Gpfixed[c(1,3,5)], type="n", xaxt="n", ylab="gamma values", xlab="Trait type", xlim=c(0.7,3.3), ylim=c(0,0.5), main="Gamma (+ve)")
axis(side=1, c("LH","M","S"), at=c(1,2,3))
lines( c(1,1), c(hpd(estimatesGP[,1])), lwd=2 )
lines( c(2,2), c(hpd(estimatesGP[,2])), lwd=2 )
lines( c(3,3), c(hpd(estimatesGP[,3])), lwd=2 )
lines( c(1.1,1.1), c(hpd(estimatesGP[,4])), lwd=2 )
lines( c(2.1,2.1), c(hpd(estimatesGP[,5])), lwd=2 )
lines( c(3.1,3.1), c(hpd(estimatesGP[,6])), lwd=2 )
A.est <- c( mean(estimatesGP[,1]), mean(estimatesGP[,2]), mean(estimatesGP[,3]) )
points( 1:3, A.est, pch=16, cex=2)  #animals - filled points
P.est <- c( mean(estimatesGP[,4]), mean(estimatesGP[,5]), mean(estimatesGP[,6]) )
points( 1.1:3.1, P.est, pch=21, bg="white", cex=2)
estimatesGP <- FoldedNormal( cbind( GamPos_Bayes$Sol[,1],
( GamPos_Bayes$Sol[,1] + GamPos_Bayes$Sol[,2] ),
( GamPos_Bayes$Sol[,1] + GamPos_Bayes$Sol[,3] ),
( GamPos_Bayes$Sol[,1] + GamPos_Bayes$Sol[,4] ),
( GamPos_Bayes$Sol[,1] + GamPos_Bayes$Sol[,2] + GamPos_Bayes$Sol[,4] + GamPos_Bayes$Sol[,5] ),
( GamPos_Bayes$Sol[,1] + GamPos_Bayes$Sol[,3] + GamPos_Bayes$Sol[,4] + GamPos_Bayes$Sol[,6] ) ))
colnames( estimatesGP ) <- c( 'A.LH', 'A.M', 'A.S', 'P.LH', 'P.M', 'P.S' )
# tabulate estimates
apply( estimatesGP, 2, mean )  ;	apply( estimatesGP, 2, hpd )
Gpfixed <- apply( estimatesGP, 2, mean )
plot(Gpfixed[c(1,3,5)], type="n", xaxt="n", ylab="gamma values", xlab="Trait type", xlim=c(0.7,3.3), ylim=c(0,0.5), main="Gamma (+ve)")
axis(side=1, c("LH","M","S"), at=c(1,2,3))
lines( c(1,1), c(hpd(estimatesGP[,1])), lwd=2 )
lines( c(2,2), c(hpd(estimatesGP[,2])), lwd=2 )
lines( c(3,3), c(hpd(estimatesGP[,3])), lwd=2 )
lines( c(1.1,1.1), c(hpd(estimatesGP[,4])), lwd=2 )
lines( c(2.1,2.1), c(hpd(estimatesGP[,5])), lwd=2 )
lines( c(3.1,3.1), c(hpd(estimatesGP[,6])), lwd=2 )
A.est <- c( mean(estimatesGP[,1]), mean(estimatesGP[,2]), mean(estimatesGP[,3]) )
points( 1:3, A.est, pch=16, cex=2)  #animals - filled points
P.est <- c( mean(estimatesGP[,4]), mean(estimatesGP[,5]), mean(estimatesGP[,6]) )
points( 1.1:3.1, P.est, pch=21, bg="white", cex=2)
GamNeg_1_Bayes <- MCMCglmm( GamNeg ~ 1, mev= measurement_error_variance, data= select_G, random= ~ StudyID + Species, prior= myprior, nitt=5000 )
GN1B<- FoldedNormal( GamNeg_1_Bayes$Sol )
mean( GN1B )	;	hpd( GN1B )  ;  Mode( GN1B )
GamNeg_Bayes <- MCMCglmm( abs(GamNeg) ~ 1 + Trait.type * Taxon2, mev= measurement_error_variance, data= select_G, random= ~ StudyID + Species, prior= myprior, nitt=5000, burnin=100, thin=25 )
summary(GamNeg_Bayes)$solutions
estimatesGN <- -FoldedNormal( cbind( GamNeg_Bayes$Sol[,1],
( GamNeg_Bayes$Sol[,1] + GamNeg_Bayes$Sol[,2] ),
( GamNeg_Bayes$Sol[,1] + GamNeg_Bayes$Sol[,3] ),
( GamNeg_Bayes$Sol[,1] + GamNeg_Bayes$Sol[,4] ),
( GamNeg_Bayes$Sol[,1] + GamNeg_Bayes$Sol[,2] + GamNeg_Bayes$Sol[,4] + GamNeg_Bayes$Sol[,5] ) ))
colnames( estimatesGN ) <- c( 'A.LH', 'A.M', 'A.S', 'P.LH', 'P.M' )
estimatesGN <- -FoldedNormal( cbind( GamNeg_Bayes$Sol[,1],
( GamNeg_Bayes$Sol[,1] + GamNeg_Bayes$Sol[,2] ),
( GamNeg_Bayes$Sol[,1] + GamNeg_Bayes$Sol[,3] ),
( GamNeg_Bayes$Sol[,1] + GamNeg_Bayes$Sol[,4] ),
( GamNeg_Bayes$Sol[,1] + GamNeg_Bayes$Sol[,2] + GamNeg_Bayes$Sol[,4] + GamNeg_Bayes$Sol[,5] ) ))
colnames( estimatesGN ) <- c( 'A.LH', 'A.M', 'A.S', 'P.LH', 'P.M' )
# tabulate estimates
apply( estimatesGN, 2, mean )  ;	apply( estimatesGN, 2, hpd )
# A.LH         A.M         A.S        P.LH         P.M
# mean 0.02085828 0.05083219 0.08313043 0.02379331 0.03064535
# -95% -0.004494951 0.02417369 0.05386852 0.003763714 0.006135693
# +95% 0.048221637 0.09057600 0.11089717 0.050895186 0.057735310
Gnfixed <- apply( estimatesGN, 2, mean )
plot(Gnfixed[c(1,3,5)], type="n", xaxt="n", ylab="gamma values", xlab="Trait type", xlim=c(0.7,3.3), ylim=c(-0.2,0.05), main="Gamma (-ve)")
axis(side=1, c("LH","M","S"), at=c(1,2,3))
lines( c(1,1), c(hpd(estimates[,1])), lwd=2 )
lines( c(2,2), c(hpd(estimates[,2])), lwd=2 )
lines( c(3,3), c(hpd(estimates[,3])), lwd=2 )
lines( c(1.1,1.1), c(hpd(estimates[,4])), lwd=2 )
lines( c(2.1,2.1), c(hpd(estimates[,5])), lwd=2 )
A.est <- c( mean(estimates[,1]), mean(estimates[,2]), mean(estimates[,3]) )
points( 1:3, A.est, pch=16, cex=2)  #animals - filled points
P.est <- c( mean(estimates[,4]), mean(estimates[,5]) )
points( 1.1:2.1, P.est, pch=21, bg="white", cex=2)
plot(Gnfixed[c(1,3,5)], type="n", xaxt="n", ylab="gamma values", xlab="Trait type", xlim=c(0.7,3.3), ylim=c(0,0.05), main="Gamma (-ve)")
axis(side=1, c("LH","M","S"), at=c(1,2,3))
lines( c(1,1), c(hpd(estimates[,1])), lwd=2 )
lines( c(2,2), c(hpd(estimates[,2])), lwd=2 )
lines( c(3,3), c(hpd(estimates[,3])), lwd=2 )
lines( c(1.1,1.1), c(hpd(estimates[,4])), lwd=2 )
lines( c(2.1,2.1), c(hpd(estimates[,5])), lwd=2 )
A.est <- c( mean(estimates[,1]), mean(estimates[,2]), mean(estimates[,3]) )
points( 1:3, A.est, pch=16, cex=2)  #animals - filled points
P.est <- c( mean(estimates[,4]), mean(estimates[,5]) )
points( 1.1:2.1, P.est, pch=21, bg="white", cex=2)
plot(Gnfixed[c(1,3,5)], type="n", xaxt="n", ylab="gamma values", xlab="Trait type", xlim=c(0.7,3.3), ylim=c(0,0.5), main="Gamma (-ve)")
axis(side=1, c("LH","M","S"), at=c(1,2,3))
lines( c(1,1), c(hpd(estimates[,1])), lwd=2 )
lines( c(2,2), c(hpd(estimates[,2])), lwd=2 )
lines( c(3,3), c(hpd(estimates[,3])), lwd=2 )
lines( c(1.1,1.1), c(hpd(estimates[,4])), lwd=2 )
lines( c(2.1,2.1), c(hpd(estimates[,5])), lwd=2 )
A.est <- c( mean(estimates[,1]), mean(estimates[,2]), mean(estimates[,3]) )
points( 1:3, A.est, pch=16, cex=2)  #animals - filled points
P.est <- c( mean(estimates[,4]), mean(estimates[,5]) )
points( 1.1:2.1, P.est, pch=21, bg="white", cex=2)
Gnfixed <- apply( estimatesGN, 2, mean )
plot(Gnfixed[c(1,3,5)], type="n", xaxt="n", ylab="gamma values", xlab="Trait type", xlim=c(0.7,3.3), ylim=c(0,0.5), main="(abs) Gamma (-ve)")
axis(side=1, c("LH","M","S"), at=c(1,2,3))
lines( c(1,1), c(hpd(estimates[,1])), lwd=2 )
lines( c(2,2), c(hpd(estimates[,2])), lwd=2 )
lines( c(3,3), c(hpd(estimates[,3])), lwd=2 )
lines( c(1.1,1.1), c(hpd(estimates[,4])), lwd=2 )
lines( c(2.1,2.1), c(hpd(estimates[,5])), lwd=2 )
A.est <- c( mean(estimates[,1]), mean(estimates[,2]), mean(estimates[,3]) )
points( 1:3, A.est, pch=16, cex=2)  #animals - filled points
P.est <- c( mean(estimates[,4]), mean(estimates[,5]) )
points( 1.1:2.1, P.est, pch=21, bg="white", cex=2)
getwd()
DZ.reml0 <- lmer( absRate ~ 1 + (1|Study), data=responseA )
DZ.reml1 <- lmer( absRate ~ 1 + Trait.type + NatExp + (1|Study), data=responseA )
DZ.reml2 <- lmer( absRate ~ 1 + Trait.type + NatExp + (1|Study) + (1|Species), data=responseA )
DZ.reml3 <- lmer( absRate ~ 1 + Trait.type + NatExp + (Trait.type|Species) + (1|Study), data=responseA )
bbmle::BICtab( DZ.reml0, DZ.reml1, DZ.reml2, DZ.reml3, nobs=nrow(responseA), weights=T )
bbmle::AICctab( DZ.reml0, DZ.reml1, DZ.reml2, DZ.reml3, nobs=nrow(responseA), weights=T )
getws()
getwd()
select_G <- subset( select, select$Gamma_SE > 0 )
measurement_error_variance <- select_G$Gamma_SE^2
GamNeg_1_Bayes <- MCMCglmm( GamNeg ~ 1, mev= measurement_error_variance, data= select_G, random= ~ StudyID + Species, prior= myprior, nitt=5000 )
summary( GamNeg_1_Bayes )$solutions
GN1B<- FoldedNormal( GamNeg_1_Bayes$Sol )
mean( GN1B )	  ; 	hpd( GN1B )     ;   Mode( GN1B )
GamNeg_Bayes <- MCMCglmm( abs(GamNeg) ~ 1 + Trait.type * Taxon2, mev= measurement_error_variance, data= select_G, random= ~ StudyID + Species, prior= myprior, nitt=5000, burnin=1000, thin=25 )
plot(GamNeg_Bayes)
acf(GamNeg_Bayes$VCV)
summary(GamNeg_Bayes)$solutions
estimatesGN <- -FoldedNormal( cbind( GamNeg_Bayes$Sol[,1],
( GamNeg_Bayes$Sol[,1] + GamNeg_Bayes$Sol[,2] ),
( GamNeg_Bayes$Sol[,1] + GamNeg_Bayes$Sol[,3] ),
( GamNeg_Bayes$Sol[,1] + GamNeg_Bayes$Sol[,4] ),
( GamNeg_Bayes$Sol[,1] + GamNeg_Bayes$Sol[,2] + GamNeg_Bayes$Sol[,4] + GamNeg_Bayes$Sol[,5] ) ))
colnames( estimatesGN ) <- c( 'A.LH', 'A.M', 'A.S', 'P.LH', 'P.M' )
apply( estimatesGN, 2, mean )  ;	apply( estimatesGN, 2, hpd )
Gnfixed <- apply( estimatesGN, 2, mean )
plot(Gnfixed[c(1,3,5)], type="n", xaxt="n", ylab="gamma values", xlab="Trait type", xlim=c(0.7,3.3), ylim=c(0,0.5), main="(abs) Gamma (-ve)")
axis(side=1, c("LH","M","S"), at=c(1,2,3))
lines( c(1,1), c(hpd(estimates[,1])), lwd=2 )
lines( c(2,2), c(hpd(estimates[,2])), lwd=2 )
lines( c(3,3), c(hpd(estimates[,3])), lwd=2 )
lines( c(1.1,1.1), c(hpd(estimates[,4])), lwd=2 )
lines( c(2.1,2.1), c(hpd(estimates[,5])), lwd=2 )
A.est <- c( mean(estimates[,1]), mean(estimates[,2]), mean(estimates[,3]) )
points( 1:3, A.est, pch=16, cex=2)  #animals - filled points
P.est <- c( mean(estimates[,4]), mean(estimates[,5]) )
points( 1.1:2.1, P.est, pch=21, bg="white", cex=2)
Gpfixed <- apply( estimatesGP, 2, mean )
plot(Gpfixed[c(1,3,5)], type="n", xaxt="n", ylab="gamma values", xlab="Trait type", xlim=c(0.7,3.3), ylim=c(0,0.5), main="Gamma (+ve)")
axis(side=1, c("LH","M","S"), at=c(1,2,3))
lines( c(1,1), c(hpd(estimatesGP[,1])), lwd=2 )
lines( c(2,2), c(hpd(estimatesGP[,2])), lwd=2 )
lines( c(3,3), c(hpd(estimatesGP[,3])), lwd=2 )
lines( c(1.1,1.1), c(hpd(estimatesGP[,4])), lwd=2 )
lines( c(2.1,2.1), c(hpd(estimatesGP[,5])), lwd=2 )
lines( c(3.1,3.1), c(hpd(estimatesGP[,6])), lwd=2 )
A.est <- c( mean(estimatesGP[,1]), mean(estimatesGP[,2]), mean(estimatesGP[,3]) )
points( 1:3, A.est, pch=16, cex=2)  #animals - filled points
P.est <- c( mean(estimatesGP[,4]), mean(estimatesGP[,5]), mean(estimatesGP[,6]) )
points( 1.1:3.1, P.est, pch=21, bg="white", cex=2)
Gnfixed <- apply( estimatesGN, 2, mean )
plot(Gnfixed[c(1,3,5)], type="n", xaxt="n", ylab="gamma values", xlab="Trait type", xlim=c(0.7,3.3), ylim=c(0,0.5), main="(abs) Gamma (-ve)")
axis(side=1, c("LH","M","S"), at=c(1,2,3))
lines( c(1,1), c(hpd(estimatesGN[,1])), lwd=2 )
lines( c(2,2), c(hpd(estimatesGN[,2])), lwd=2 )
lines( c(3,3), c(hpd(estimatesGN[,3])), lwd=2 )
lines( c(1.1,1.1), c(hpd(estimatesGN[,4])), lwd=2 )
lines( c(2.1,2.1), c(hpd(estimatesGN[,5])), lwd=2 )
A.est <- c( mean(estimatesGN[,1]), mean(estimatesGN[,2]), mean(estimatesGN[,3]) )
points( 1:3, A.est, pch=16, cex=2)  #animals - filled points
P.est <- c( mean(estimatesGN[,4]), mean(estimatesGN[,5]) )
points( 1.1:2.1, P.est, pch=21, bg="white", cex=2)
Gnfixed <- apply( estimatesGN, 2, mean )
plot(Gnfixed[c(1,3,5)], type="n", xaxt="n", ylab="gamma values", xlab="Trait type", xlim=c(0.7,3.3), ylim=c(0,0.05), main="(abs) Gamma (-ve)")
axis(side=1, c("LH","M","S"), at=c(1,2,3))
lines( c(1,1), c(hpd(estimatesGN[,1])), lwd=2 )
lines( c(2,2), c(hpd(estimatesGN[,2])), lwd=2 )
lines( c(3,3), c(hpd(estimatesGN[,3])), lwd=2 )
lines( c(1.1,1.1), c(hpd(estimatesGN[,4])), lwd=2 )
lines( c(2.1,2.1), c(hpd(estimatesGN[,5])), lwd=2 )
A.est <- c( mean(estimatesGN[,1]), mean(estimatesGN[,2]), mean(estimatesGN[,3]) )
points( 1:3, A.est, pch=16, cex=2)  #animals - filled points
P.est <- c( mean(estimatesGN[,4]), mean(estimatesGN[,5]) )
points( 1.1:2.1, P.est, pch=21, bg="white", cex=2)
Gnfixed <- apply( estimatesGN, 2, mean )
plot(Gnfixed[c(1,3,5)], type="n", xaxt="n", ylab="gamma values", xlab="Trait type", xlim=c(0.7,3.3), ylim=c(-0.5,0.5), main="(abs) Gamma (-ve)")
axis(side=1, c("LH","M","S"), at=c(1,2,3))
lines( c(1,1), c(hpd(estimatesGN[,1])), lwd=2 )
lines( c(2,2), c(hpd(estimatesGN[,2])), lwd=2 )
lines( c(3,3), c(hpd(estimatesGN[,3])), lwd=2 )
lines( c(1.1,1.1), c(hpd(estimatesGN[,4])), lwd=2 )
lines( c(2.1,2.1), c(hpd(estimatesGN[,5])), lwd=2 )
A.est <- c( mean(estimatesGN[,1]), mean(estimatesGN[,2]), mean(estimatesGN[,3]) )
points( 1:3, A.est, pch=16, cex=2)  #animals - filled points
P.est <- c( mean(estimatesGN[,4]), mean(estimatesGN[,5]) )
points( 1.1:2.1, P.est, pch=21, bg="white", cex=2)
plot(Gnfixed[c(1,3,5)], type="n", xaxt="n", ylab="gamma values", xlab="Trait type", xlim=c(0.7,3.3), ylim=c(-0.05,0.05), main="(abs) Gamma (-ve)")
axis(side=1, c("LH","M","S"), at=c(1,2,3))
lines( c(1,1), c(hpd(estimatesGN[,1])), lwd=2 )
lines( c(2,2), c(hpd(estimatesGN[,2])), lwd=2 )
lines( c(3,3), c(hpd(estimatesGN[,3])), lwd=2 )
lines( c(1.1,1.1), c(hpd(estimatesGN[,4])), lwd=2 )
lines( c(2.1,2.1), c(hpd(estimatesGN[,5])), lwd=2 )
A.est <- c( mean(estimatesGN[,1]), mean(estimatesGN[,2]), mean(estimatesGN[,3]) )
points( 1:3, A.est, pch=16, cex=2)  #animals - filled points
P.est <- c( mean(estimatesGN[,4]), mean(estimatesGN[,5]) )
points( 1.1:2.1, P.est, pch=21, bg="white", cex=2)
A.est
Gnfixed <- apply( estimatesGN, 2, mean )
plot(Gnfixed[c(1,3,5)], type="n", xaxt="n", ylab="gamma values", xlab="Trait type", xlim=c(0.7,3.3), ylim=c(-0.1,0), main="(abs) Gamma (-ve)")
axis(side=1, c("LH","M","S"), at=c(1,2,3))
lines( c(1,1), c(hpd(estimatesGN[,1])), lwd=2 )
lines( c(2,2), c(hpd(estimatesGN[,2])), lwd=2 )
lines( c(3,3), c(hpd(estimatesGN[,3])), lwd=2 )
lines( c(1.1,1.1), c(hpd(estimatesGN[,4])), lwd=2 )
lines( c(2.1,2.1), c(hpd(estimatesGN[,5])), lwd=2 )
A.est <- c( mean(estimatesGN[,1]), mean(estimatesGN[,2]), mean(estimatesGN[,3]) )
points( 1:3, A.est, pch=16, cex=2)  #animals - filled points
P.est <- c( mean(estimatesGN[,4]), mean(estimatesGN[,5]) )
points( 1.1:2.1, P.est, pch=21, bg="white", cex=2)
apply( estimatesGN, 2, mean )  ;	apply( estimatesGN, 2, hpd )
plot(Gnfixed[c(1,3,5)], type="n", xaxt="n", ylab="gamma values", xlab="Trait type", xlim=c(0.7,3.3), ylim=c(-0.3,0), main="(abs) Gamma (-ve)")
axis(side=1, c("LH","M","S"), at=c(1,2,3))
lines( c(1,1), c(hpd(estimatesGN[,1])), lwd=2 )
lines( c(2,2), c(hpd(estimatesGN[,2])), lwd=2 )
lines( c(3,3), c(hpd(estimatesGN[,3])), lwd=2 )
lines( c(1.1,1.1), c(hpd(estimatesGN[,4])), lwd=2 )
lines( c(2.1,2.1), c(hpd(estimatesGN[,5])), lwd=2 )
A.est <- c( mean(estimatesGN[,1]), mean(estimatesGN[,2]), mean(estimatesGN[,3]) )
points( 1:3, A.est, pch=16, cex=2)  #animals - filled points
P.est <- c( mean(estimatesGN[,4]), mean(estimatesGN[,5]) )
points( 1.1:2.1, P.est, pch=21, bg="white", cex=2)
plot(Gnfixed[c(1,3,5)], type="n", xaxt="n", ylab="gamma values", xlab="Trait type", xlim=c(0.7,3.3), ylim=c(-0.2,0), main="(abs) Gamma (-ve)")
axis(side=1, c("LH","M","S"), at=c(1,2,3))
lines( c(1,1), c(hpd(estimatesGN[,1])), lwd=2 )
lines( c(2,2), c(hpd(estimatesGN[,2])), lwd=2 )
lines( c(3,3), c(hpd(estimatesGN[,3])), lwd=2 )
lines( c(1.1,1.1), c(hpd(estimatesGN[,4])), lwd=2 )
lines( c(2.1,2.1), c(hpd(estimatesGN[,5])), lwd=2 )
A.est <- c( mean(estimatesGN[,1]), mean(estimatesGN[,2]), mean(estimatesGN[,3]) )
points( 1:3, A.est, pch=16, cex=2)  #animals - filled points
P.est <- c( mean(estimatesGN[,4]), mean(estimatesGN[,5]) )
points( 1.1:2.1, P.est, pch=21, bg="white", cex=2)
getwd()
setwd("/Volumes/Old_HD/DocStore/=WORK=/BreedersEquationReview/Pitchers_PTRS2014/")
ls
ls()
dir()
setwd("Scripts/")
dir()
purl( "selection_&_rate_analyses_final.Rmd" )
require(knitr)
purl( "selection_&_rate_analyses_final.Rmd" )
